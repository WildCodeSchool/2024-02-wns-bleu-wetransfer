services:
  backend:
    build: ./backend
    env_file:
      - .env
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 1s
      timeout: 2s
      retries: 100
    depends_on:
      db:
        condition: service_healthy
  frontend_vite:
    build: ./frontend_vite
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100
 db:
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 1s
      timeout: 2s
      retries: 100
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-data/data:/var/lib/postgresql/data
  adminer:
    image: adminer
  # apigateway:
  #   image: nginx
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #     frontend_vite:
  #       condition: service_healthy
  #     img:
  #       condition: service_healthy
  #   ports:
  #     - 7000:80
  # img:
  #   build: ./img
  #   healthcheck:
  #     test: "curl --fail --request GET --url 'http://localhost:4000' || exit 1"
  #     interval: 1s
  #     timeout: 2s
  #     retries: 100
  e2e:
    build: ./e2e
    volumes:
      - ./e2e/playwright-report:/app/playwright-report
      - ./e2e/test-results:/app/test-results
    depends_on:
      - apigateway
