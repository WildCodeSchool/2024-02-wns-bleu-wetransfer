services:
  backend:
    build: ./backend
    env_file:
      - .env
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000/graphql'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 1s
      timeout: 2s
      retries: 100
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100

  db:
    image: postgres:16
    build: ./db/e2e.Dockerfile
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 1s
      timeout: 2s
      retries: 100
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db/dumps:/dumps

  files:
    build: ./files
    volumes:
      - ./files/src:/app/src
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:3000' || exit 1"
      interval: 1s
      timeout: 2s
      retries: 100
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy

  apigateway:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
      files:
        condition: service_healthy
    ports:
      - "7002:80"

  adminer:
    image: adminer
    ports:
      - "8080:8080"

  e2e:
    build: ./e2e
    volumes:
      - ./e2e/playwright-report:/app/playwright-report
      - ./e2e/test-results:/app/test-results
    depends_on:
      frontend:
        condition: service_healthy

  redis:
    image: redis
  redis-commander:
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=redis
    ports:
      - "8081:8081"