services:
    backend:
        build: ./backend
        volumes:
            - ./backend/src:/app/src
        env_file:
            - ./backend/.env
        healthcheck:
            test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000/graphql'' --data ''{"query":"query { __typename }"}'' || exit 1'
            interval: 1s
            timeout: 2s
            retries: 100
        depends_on:
            db:
                condition: service_healthy
        ports:
            - "4000:4000"
    frontend:
        build: ./frontend
        volumes:
            - ./frontend/src:/app/src
        depends_on:
            backend:
                condition: service_healthy
        healthcheck:
            test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
            interval: 1s
            timeout: 2s
            retries: 100
        ports:
            - "5173:5173"
            - "5174:5174"
    db:
        image: postgres
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
            interval: 1s
            timeout: 2s
            retries: 100
        environment:
            POSTGRES_PASSWORD: postgres
        volumes:
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./postgres-data/data:/var/lib/postgresql/data
    adminer:
        image: adminer
        ports:
            - 8080:8080
    files:
        build: ./files
        healthcheck:
            test: "curl --fail --request GET --url 'http://localhost:5173' || exit 1"
            interval: 1s
            timeout: 2s
        ports:
            - "3000:3000"

        # apigateway:
        #     image: nginx
        #     volumes:
        #         - ./nginx.conf:/etc/nginx/nginx.conf
        #     depends_on:
        #         backend:
        #             condition: service_healthy
        #         frontend:
        #             condition: service_healthy
        #         img:
        #             condition: service_healthy
        #     ports:
        #         - 7000:80
